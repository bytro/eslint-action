#!/bin/sh

is_commit() {
    test "$(git cat-file -t "$1" 2>/dev/null)" == "commit"
}

BRANCH_NAME="OP_eslint_pr_check"
CHANGE_TARGET="origin/develop"


if ! is_commit "$BRANCH_NAME"; then
    echo Invalid branch name $BRANCH_NAME >&2
    exit 666
fi
if ! is_commit "$CHANGE_TARGET"; then
    echo Invalid branch name $CHANGE_TARGET >&2
    exit 667
fi

MERGE_BASE=$(git merge-base "$BRANCH_NAME" "$CHANGE_TARGET" 2>/dev/null)
echo "$MERGE_BASE"

if ! is_commit "$MERGE_BASE"; then
    echo Unable to determine merge base >&2
    exit 668
fi

CHANGED_FILES=$(git diff --name-only "$BRANCH_NAME" "$MERGE_BASE" | grep '\.js$\|\.ts$')
for file in $CHANGED_FILES; do
    echo $file
    # git show "$BRANCH_NAME":"$file" | npx eslint --stdin --stdin-filename "$file" --format unix
    # exit
    npx prettier --write "$file"
done
